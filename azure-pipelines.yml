--- 
stages: 
  - 
    displayName: "Build the web application"
    jobs: 
      - 
        displayName: "Build job"
        job: Build
        pool: 
          demands: 
            - npm
          vmImage: ubuntu-18.04
        steps: 
          - 
            displayName: "Use .NET Core SDK $(dotnetSdkVersion)"
            inputs: 
              version: $(dotnetSdkVersion)
            task: UseDotNet@2
          - 
            displayName: "Run npm install"
            inputs: 
              verbose: false
            task: Npm@1
          - 
            displayName: "Compile Sass assets"
            script: "./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)"
          - 
            displayName: "Run gulp tasks"
            task: gulp@1
          - 
            displayName: "Write build info"
            script: "echo \"$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)\" > buildinfo.txt"
            workingDirectory: $(wwwrootDir)
          - 
            displayName: "Restore project dependencies"
            inputs: 
              command: restore
              projects: "**/*.csproj"
            task: DotNetCoreCLI@2
          - 
            displayName: "Build the project - $(buildConfiguration)"
            inputs: 
              arguments: "--no-restore --configuration $(buildConfiguration)"
              command: build
              projects: "**/*.csproj"
            task: DotNetCoreCLI@2
          - 
            displayName: "Publish the project - $(buildConfiguration)"
            inputs: 
              arguments: "--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)"
              command: publish
              projects: "**/*.csproj"
              publishWebProjects: false
              zipAfterPublish: true
            task: DotNetCoreCLI@2
          - 
            artifact: drop
            publish: $(Build.ArtifactStagingDirectory)
        variables: 
          dotnetSdkVersion: "3.1.300"
          wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
    stage: Build
  - 
    condition: |
        and
        (
          succeeded(),
          eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
        )
    dependsOn: Build
    displayName: "Deploy to the dev environment"
    jobs: 
      - 
        deployment: Deploy
        environment: dev
        pool: 
          vmImage: ubuntu-18.04
        strategy: 
          runOnce: 
            deploy: 
              steps: 
                - 
                  artifact: drop
                  download: current
                - 
                  displayName: "Azure App Service Deploy: website"
                  inputs: 
                    appName: $(WebAppNameDev)
                    azureSubscription: "Resource Manager - Tailspin - Space Game"
                    package: $(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip
                  task: AzureWebApp@1
        variables: 
          - 
            group: Release
    stage: Dev
  - 
    inputs: 
      ConnectionType: AzureRM
      WebAppName: tailspin-space-game-web-dev-24129
      appType: webApp
      azureSubscription: "Resource Manager - Tailspin - Space Game"
    task: AzureRmWebAppDeployment@4
  - 
    inputs: 
      ConnectionType: AzureRM
      WebAppName: tailspin-space-game-web-test-24129
      appType: webApp
      azureSubscription: "Resource Manager - Tailspin - Space Game"
      packageForLinux: $(System.DefaultWorkingDirectory)/**/*.zip
    task: AzureRmWebAppDeployment@4
trigger: 
  - "*"
variables: 
  buildConfiguration: Release
  releaseBranchName: release
